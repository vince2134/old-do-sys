<?php
/********************
 * 在庫照会
 *
 *
 * 変更履歴
 *    2006/09/19 (kaji)
 *      ・照会日をクリックすると本日の日付が入る
 *
 ********************/

/*
 * 履歴：
 * 　日付　　　　B票No.　　　　担当者　　　内容　
 * 　2006/10/18　06-016　　　　watanabe-k　在庫照会→発注入力へ画面遷移して場合の初期表示で選択していた商品が表示されていないバグの修正。
 * 　2006/12/05  　　　　　　　watanabe-k　在庫数抽出SQL変更
 * 　2006/12/06  ban_0020　　　suzuki　　　日付のエラーメッセージ変更
 * 　2006/12/06  ban_0022　　　suzuki　　　日付にゼロ埋め追加
 *   
 */


$page_title = "在庫照会";

//環境設定ファイル
require_once("ENV_local.php");

//HTML_QuickFormを作成
$form =& new HTML_QuickForm("dateForm", "POST", "$_SERVER[PHP_SELF]",null,"onSubmit=return confirm(true)");
//DB接続
$conn = Db_Connect();

/****************************/
// 検索セッション破棄
/****************************/
// 自画面のモジュール番号取得
$page_name  = substr($_SERVER[PHP_SELF], strrpos($_SERVER[PHP_SELF], "/")+1);
$module_no  = substr($page_name, 0, strpos($page_name, "."));

// 自画面で生成したセッションがあり、POSTがない場合
if ($_SESSION[$module_no] != null && $_POST == null){
    // 自画面で生成した検索セッションを破棄
    unset($_SESSION[$module_no]);
}

$_SESSION["ord"]["referer"] = $module_no;

/****************************/
//外部変数取得
/****************************/
$shop_id    = $_SESSION["client_id"];   //ショップ識別ID
$shop_div   = $_SESSION["shop_div"];    //本社・支社区分
$group_kind = $_SESSION["group_kind"];  //ショップ種別

//print_array($_POST);
/****************************/
//フォーム作成
/****************************/
//出力形式
$form_output_type[] =& $form->createElement("radio", null, null, "画面", "1"); 
$form_output_type[] =& $form->createElement("radio", null, null, "帳票", "2"); 
$form->addGroup($form_output_type, "form_output_type", ""); 

//照会日
$form_inquiry_day[] =& $form->createElement(
    "text", "y","","size=\"4\" maxLength=\"4\" style=\"$g_form_style\" 
    onkeyup=\"changeText(this.form,'form_inquiry_day[y]','form_inquiry_day[m]',4)\"".$g_form_option."\" 
    onFocus=\"onForm_today(this,this.form,'form_inquiry_day[y]','form_inquiry_day[m]','form_inquiry_day[d]');\" 
");
$form_inquiry_day[] =& $form->createElement("static","","","-");
$form_inquiry_day[] =& $form->createElement(
    "text", "m","","size=\"1\" maxLength=\"2\" style=\"$g_form_style\" 
    onkeyup=\"changeText(this.form,'form_inquiry_day[m]','form_inquiry_day[d]',2)\"".$g_form_option."\" 
    onFocus=\"onForm_today(this,this.form,'form_inquiry_day[y]','form_inquiry_day[m]','form_inquiry_day[d]');\" 
");
$form_inquiry_day[] =& $form->createElement("static","","","-");
$form_inquiry_day[] =& $form->createElement(
    "text", "d","","size=\"1\" maxLength=\"2\" style=\"$g_form_style\"".$g_form_option."\" 
    onFocus=\"onForm_today(this,this.form,'form_inquiry_day[y]','form_inquiry_day[m]','form_inquiry_day[d]');\" 
");
$form->addGroup( $form_inquiry_day,"form_inquiry_day","");

//対象商品
$form_target_goods[] =& $form->createElement("radio", null, null, "本部商品", "1"); 
$form_target_goods[] =& $form->createElement("radio", null, null, "その他商品", "2"); 
$form_target_goods[] =& $form->createElement("radio", null, null, "全て", "3"); 
$form->addGroup($form_target_goods, "form_target_goods", ""); 

//商品コード
$form->addElement("text", "form_goods_cd", "", "size=\"10\" maxLength=\"8\" $g_form_goods");

//商品名
$form->addElement("text", "form_goods_cname", "", "size=\"34\" maxLength=\"30\" $g_form_option");

//略称
$form->addElement("text", "form_goods_name", "", "size=\"34\" maxLength=\"30\" $g_form_option");

//Ｍ区分
$select_value = Select_Get($conn, "g_goods");
$form->addElement("select", "form_g_goods", "", $select_value, $g_form_option_select);

//製品区分
$select_value = Select_Get($conn, "product");
$form->addElement("select", 'form_product', '', $select_value, $g_form_option_select);

//製品区分
$select_value = Select_Get($conn, "g_product");
$form->addElement("select", "form_g_product", "", $select_value, $g_form_option_select);

//在庫区分
$stock_value = array(null => "", "在庫有り", "在庫０", "マイナス在庫");
$form->addElement("select", "form_stock_div", "", $stock_value,  $g_form_option_select);

//属性区分
$attri_value = array(null => null, 1 => "製品", 2 => "部品", 3 => "管理", 4 => "道具・他", 5 => "保険");
$form->addElement("select", "form_attri_div", "", $attri_value, $g_form_option_select);

//倉庫
$select_value = Select_Get($conn, "ware");
$form->addElement("select", "form_ware",  "", $select_value, $g_form_option_select);

//本社の場合だけ表示
if($shop_div=="1"){
    $select_value = Select_Get($conn, "fcshop", $where);
    $form->addElement("select", "form_cshop", "", $select_value, $g_form_option_select);
}

//表示ボタン
$form->addElement("submit", "form_show_button","表　示", "onClick=\"javascript:Which_Type('form_output_type','2-4-102.php','# ');\"");

//クリアボタン
$form->addElement("button", "form_clear_button", "クリア", "onClick=\"location.href='$_SERVER[PHP_SELF]'\"");

//発注入力へボタン
$form->addElement("submit", "form_order_button", "発注入力へ", $disabled);

//各条件hidden
$form->addElement("hidden", "form_h_output_type");
$form->addElement("hidden", "form_h_inquiry_day[y]");                       //照会日（年）
$form->addElement("hidden", "form_h_inquiry_day[m]");                       //照会日（月）
$form->addElement("hidden", "form_h_inquiry_day[d]");                       //照会日（日）
$form->addElement("hidden", "form_h_inquiry_y");
$form->addElement("hidden", "form_h_inquiry_m");
$form->addElement("hidden", "form_h_inquiry_d");
$form->addElement("hidden", "form_h_target_goods");                         //対象商品
$form->addElement("hidden", "form_h_goods_cd");                             //商品コード
$form->addElement("hidden", "form_h_goods_cname");                           //商品名
$form->addElement("hidden", "form_h_g_goods");                              //Ｍ区分
$form->addElement("hidden", "form_h_product");                              //製品区分
$form->addElement("hidden", "form_h_g_product");                              //製品区分
$form->addElement("hidden", "form_h_stock_div");                            //在庫区分
$form->addElement("hidden", "form_h_attri_div");                            //属性区分
$form->addElement("hidden", "form_h_ware");                                 //倉庫
$form->addElement("hidden", "form_h_cshop");                                //事業所

/****************************/
//初期値設定
/****************************/
$const_data["form_output_type"]     = "1";
$const_data["form_target_goods"]    = "3";
$const_data["form_h_target_goods"]  = "3";
$const_data["form_cshop"]           = $shop_id;
$form->setDefaults($const_data);

/****************************/
//ルール作成
/****************************/
$form->addGroupRule("form_inquiry_day", array(
    "y" => array(array("照会日の日付は妥当ではありません。", "numeric")),
    "m" => array(array("照会日の日付は妥当ではありません。", "numeric")),
    "d" => array(array("照会日の日付は妥当ではありません。", "numeric"))
));

/****************************/
//表示ボタン押下処理
/****************************/
if($_POST["form_show_button"] == "表　示" && $_POST["h_ok_button"] == null){
print "1";

    /******************************/
    //POST情報取得
    /******************************/
    $output_type    = $_POST["form_output_type"];                           //出力形式
    $target_goods   = $_POST["form_target_goods"];                          //対象商品
    $inquiry_day_y  = $_POST["form_inquiry_day"]["y"];                      //照会日（年）
    $inquiry_day_m  = $_POST["form_inquiry_day"]["m"];                      //照会日（月）
    $inquiry_day_d  = $_POST["form_inquiry_day"]["d"];                      //照会日（日）
	if($inquiry_day_y != NULL && $inquiry_day_m != NULL && $inquiry_day_d != NULL){
		$inquiry_day_y = str_pad($inquiry_day_y,4, 0, STR_PAD_LEFT);  
		$inquiry_day_m = str_pad($inquiry_day_m,2, 0, STR_PAD_LEFT); 
		$inquiry_day_d = str_pad($inquiry_day_d,2, 0, STR_PAD_LEFT); 
		$day = $inquiry_day_y."-".$inquiry_day_m."-".$inquiry_day_d;        //【】に表示させる照会日
	}
    $g_goods_id     = $_POST["form_g_goods"];                               //Ｍ区分
    $product_id     = $_POST["form_product"];                               //製品区分
    $g_product_id   = $_POST["form_g_product"];                             //製品区分
    $goods_cd       = $_POST["form_goods_cd"];                              //商品コード
    $goods_cname    = $_POST["form_goods_cname"];                           //略称
    $goods_name     = $_POST["form_goods_name"];                            //商品名
    $stock_div      = $_POST["form_stock_div"];                             //在庫区分
    $attri_div      = $_POST["form_attri_div"];                             //属性区分
    $ware_id        = $_POST["form_ware"];                                  //倉庫
    $cshop          = $_POST["form_cshop"];                                 //事業所

    $post_flg       = true;                                                 //POSTフラグ

/****************************/
//発注入力へ
/****************************/
//}elseif(count($_POST)>0 && $_POST["form_show_button"] != "表　示"){
}elseif($_POST["form_order_button"] == "発注入力へ"){
print "2";

    $target_goods   = stripslashes($_SESSION[$module_no]["form_h_target_goods"]);                        //対象商
    $inquiry_day_y  = stripslashes($_SESSION[$module_no]["form_h_inquiry_day"]["y"]);                    //照会日（年）
    $inquiry_day_m  = stripslashes($_SESSION[$module_no]["form_h_inquiry_day"]["m"]);                    //照会日（月）
    $inquiry_day_d  = stripslashes($_SESSION[$module_no]["form_h_inquiry_day"]["d"]);                    //照会日（日）
	if($inquiry_day_y != NULL && $inquiry_day_m != NULL && $inquiry_day_d != NULL){
		$inquiry_day_y = str_pad($inquiry_day_y,4, 0, STR_PAD_LEFT);  
		$inquiry_day_m = str_pad($inquiry_day_m,2, 0, STR_PAD_LEFT); 
		$inquiry_day_d = str_pad($inquiry_day_d,2, 0, STR_PAD_LEFT); 
		$day = $inquiry_day_y."-".$inquiry_day_m."-".$inquiry_day_d;        //【】に表示させる照会日
	}
    $g_goods_id     = stripslashes($_SESSION[$module_no]["form_h_g_goods"]);                             //Ｍ区分
    $product_id     = stripslashes($_SESSION[$module_no]["form_h_product"]);                             //製品区分
    $goods_cd       = stripslashes($_SESSION[$module_no]["form_h_goods_cd"]);                            //商品コード
    $goods_cname    = stripslashes($_SESSION[$module_no]["form_h_goods_cname"]);                         //商品名
    $stock_div      = stripslashes($_SESSION[$module_no]["form_h_stock_div"]);                           //在庫管理
    $ware_id        = stripslashes($_SESSION[$module_no]["form_h_ware"]);                                //倉庫
    $cshop          = stripslashes($_SESSION[$module_no]["form_h_cshop"]);                               //事業所

    $post_flg       = true;                                                 //POSTフラグ

/****************************/
//発注入力後
/****************************/
// 完了画面のOKボタンがPOSTされている場合
}elseif($_POST["form_show_button"] != null &&$_POST["h_ok_button"] != null){
print "3";

    $target_goods   = $_POST["form_h_target_goods"];                        //対象商品
    $inquiry_day_y  = $_POST["form_h_inquiry_day"]["y"];                    //照会日（年）
    $inquiry_day_m  = $_POST["form_h_inquiry_day"]["m"];                    //照会日（月）
    $inquiry_day_d  = $_POST["form_h_inquiry_day"]["d"];                    //照会日（日）
	if($inquiry_day_y != NULL && $inquiry_day_m != NULL && $inquiry_day_d != NULL){
		$inquiry_day_y = str_pad($inquiry_day_y,4, 0, STR_PAD_LEFT);  
		$inquiry_day_m = str_pad($inquiry_day_m,2, 0, STR_PAD_LEFT); 
		$inquiry_day_d = str_pad($inquiry_day_d,2, 0, STR_PAD_LEFT); 
		$day = $inquiry_day_y."-".$inquiry_day_m."-".$inquiry_day_d;        //【】に表示させる照会日
	}
    $g_goods_id     = $_POST["form_h_g_goods"];                             //Ｍ区分
    $product_id     = $_POST["form_h_product"];                             //製品区分
    $goods_cd       = $_POST["form_h_goods_cd"];                            //商品コード
    $goods_cname    = $_POST["form_h_goods_cname"];                         //商品名
    $stock_div      = $_POST["form_h_stock_div"];                           //在庫管理
    $ware_id        = $_POST["form_h_ware"];                                //倉庫
    $cshop          = $_POST["form_h_cshop"];                               //事業所

    $post_flg       = true;                                                 //POSTフラグ

    // フォームにhiddenの検索データをSET
    $hdn_set["form_output_type"]        = ($_POST["form_h_output_type"] != null) ? stripslashes($_POST["form_h_output_type"]) : "1";
    $hdn_set["form_inquiry_day"]["y"]   = stripslashes($_POST["form_h_inquiry_y"]);
    $hdn_set["form_inquiry_day"]["m"]   = stripslashes($_POST["form_h_inquiry_m"]);
    $hdn_set["form_inquiry_day"]["d"]   = stripslashes($_POST["form_h_inquiry_d"]);
    $hdn_set["form_target_goods"]       = ($_POST["form_h_target_goods"] != null) ? stripslashes($_POST["form_h_target_goods"]) : "3";
    $hdn_set["form_g_goods"]            = stripslashes($_POST["form_h_g_goods"]);
    $hdn_set["form_product"]            = stripslashes($_POST["form_h_product"]);
    $hdn_set["form_g_product"]          = stripslashes($_POST["form_h_g_product"]);
    $hdn_set["form_goods_cd"]           = stripslashes($_POST["form_h_goods_cd"]);
    $hdn_set["form_goods_name"]         = stripslashes($_POST["form_h_goods_name"]);
    $hdn_set["form_goods_cname"]        = stripslashes($_POST["form_h_goods_cname"]);
    $hdn_set["form_attri_div"]          = stripslashes($_POST["form_h_attri_div"]);
    $hdn_set["form_ware"]               = stripslashes($_POST["form_h_ware"]);
    $hdn_set["form_stock_div"]          = stripslashes($_POST["form_h_stock_div"]);
    $hdn_set["form_cshop"]              = ($_POST["form_h_shop"] != null) ? stripslashes($_POST["form_h_cshop"]) : $shop_id;
    $form->setConstants($hdn_set);

}
print_array($_SESSION[$module_no]);

/****************************/
//事業所名取得
/****************************/
$sql  = "SELECT ";
$sql .= "    client_cname ";
$sql .= "FROM ";
$sql .= "    t_client ";
$sql .= "WHERE ";
$sql .= ($cshop == null) ? "    client_id = $shop_id;" : "    client_id = $cshop;"; // セッション：プルダウン
$result = Db_Query($conn,$sql);
$data = Get_Data($result);
$cshop_name = $data[0][0];

/****************************/
//POSTがあれば
/****************************/
if($post_flg == true){
 
	//◇照会日
	//・文字種チェック
	if($inquiry_day_y != null || $inquiry_day_m != null || $inquiry_day_d != null){
		
		//数値判定
		if(!ereg("^[0-9]{4}$",$inquiry_day_y) || !ereg("^[0-9]{2}$",$inquiry_day_m) || !ereg("^[0-9]{2}$",$inquiry_day_d)){
			$form->setElementError("form_inquiry_day","照会日の日付は妥当ではありません。");
            $err_flg = true;
		}

	    $y_day = (int)$inquiry_day_y;
	    $m_day = (int)$inquiry_day_m;
	    $d_day = (int)$inquiry_day_d;
	    if(!checkdate($m_day,$d_day,$y_day)){
	        $form->setElementError("form_inquiry_day","照会日の日付は妥当ではありません。");
            $err_flg = true;
	    }
	}

    /******************************/
    //値検証
    /******************************/
    if($form->validate()){
   
        //照会日を連結
        $inquiry_day = $inquiry_day_y."-".$inquiry_day_m."-".$inquiry_day_d;        //照会日

        /*******************************/
        //検索条件をhiddenにセット
        /*******************************/
        if ($_POST["form_show_button"] != null){
            $def_data["form_h_inquiry_day"]["y"]    = stripslashes($inquiry_day_y); //照会日（年）
            $def_data["form_h_inquiry_day"]["m"]    = stripslashes($inquiry_day_m); //照会日（月）
            $def_data["form_h_inquiry_day"]["d"]    = stripslashes($inquiry_day_d); //照会日（日）
            $def_data["form_h_target_goods"]        = stripslashes($target_goods);  //対象商品
            $def_data["form_h_g_goods"]             = stripslashes($g_goods_id);    //Ｍ区分
            $def_data["form_h_product"]             = stripslashes($product_id);    //製品区分
            $def_data["form_h_g_product"]           = stripslashes($g_product_id);
            $def_data["form_h_goods_cd"]            = stripslashes($goods_cd);      //商品コード
            $def_data["form_h_goods_cname"]         = stripslashes($goods_cname);   //商品名
            $def_data["form_h_attri_div"]           = stripslashes($attri_div);     //在庫区分
            $def_data["form_h_ware"]                = stripslashes($ware_id);       //倉庫
            $def_data["form_h_stock_div"]           = stripslashes($stock_div);     //在庫区分
            $def_data["form_h_cshop"]               = $cshop;                       //事業所
            $form->setConstants($def_data);
        }

        /*******************************/
        // フォームデータをSESSIONにセット
        /*******************************/
        if ($_POST["form_show_button"] != null){
            $_SESSION[$module_no]["form_h_output_type"]     = stripslashes($_POST["form_output_type"]);
            $_SESSION[$module_no]["form_h_inquiry_y"]       = stripslashes($_POST["form_inquiry_day"]["y"]);
            $_SESSION[$module_no]["form_h_inquiry_m"]       = stripslashes($_POST["form_inquiry_day"]["m"]);
            $_SESSION[$module_no]["form_h_inquiry_d"]       = stripslashes($_POST["form_inquiry_day"]["d"]);
            $_SESSION[$module_no]["form_h_target_goods"]    = stripslashes($_POST["form_target_goods"]);
            $_SESSION[$module_no]["form_h_g_goods"]         = stripslashes($_POST["form_g_goods"]);
            $_SESSION[$module_no]["form_h_product"]         = stripslashes($_POST["form_product"]);
            $_SESSION[$module_no]["form_h_g_product"]       = stripslashes($_POST["form_g_product"]);
            $_SESSION[$module_no]["form_h_goods_cd"]        = stripslashes($_POST["form_goods_cd"]);
            $_SESSION[$module_no]["form_h_goods_name"]      = stripslashes($_POST["form_goods_name"]);
            $_SESSION[$module_no]["form_h_goods_cname"]     = stripslashes($_POST["form_goods_cname"]);
            $_SESSION[$module_no]["form_h_attri_div"]       = stripslashes($_POST["form_attri_div"]);
            $_SESSION[$module_no]["form_h_ware"]            = stripslashes($_POST["form_ware"]);
            $_SESSION[$module_no]["form_h_stock_div"]       = stripslashes($_POST["form_stock_div"]);
            $_SESSION[$module_no]["form_h_cshop"]           = stripslashes($_POST["form_cshop"]);
            $_SESSION[$module_no]["form_show_button"]       = stripslashes($_POST["form_show_button"]);
        }
        if ($_POST["h_ok_button"] != null){
            $_SESSION[$module_no]["form_h_output_type"]     = stripslashes($_POST["form_h_output_type"]);
            $_SESSION[$module_no]["form_h_inquiry_y"]       = stripslashes($_POST["form_h_inquiry_y"]);
            $_SESSION[$module_no]["form_h_inquiry_m"]       = stripslashes($_POST["form_h_inquiry_m"]);
            $_SESSION[$module_no]["form_h_inquiry_d"]       = stripslashes($_POST["form_h_inquiry_d"]);
            $_SESSION[$module_no]["form_h_target_goods"]    = stripslashes($_POST["form_h_target_goods"]);
            $_SESSION[$module_no]["form_h_g_goods"]         = stripslashes($_POST["form_h_g_goods"]);
            $_SESSION[$module_no]["form_h_product"]         = stripslashes($_POST["form_h_product"]);
            $_SESSION[$module_no]["form_h_g_product"]       = stripslashes($_POST["form_h_g_product"]);
            $_SESSION[$module_no]["form_h_goods_cd"]        = stripslashes($_POST["form_h_goods_cd"]);
            $_SESSION[$module_no]["form_h_goods_name"]      = stripslashes($_POST["form_h_goods_name"]);
            $_SESSION[$module_no]["form_h_goods_cname"]     = stripslashes($_POST["form_h_goods_cname"]);
            $_SESSION[$module_no]["form_h_attri_div"]       = stripslashes($_POST["form_h_attri_div"]);
            $_SESSION[$module_no]["form_h_ware"]            = stripslashes($_POST["form_h_ware"]);
            $_SESSION[$module_no]["form_h_stock_div"]       = stripslashes($_POST["form_h_stock_div"]);
            $_SESSION[$module_no]["form_h_cshop"]           = stripslashes($_POST["form_h_cshop"]);
            $_SESSION[$module_no]["form_show_button"]       = stripslashes($_POST["form_show_button"]);
        }

        /*****************************/
        //FROM_SQL作成
        /*****************************/
        //照会日に未来の日付が指定された場合
        if($output_type == "1" && $inquiry_day != "--" && $inquiry_day > date("Y-m-d")){

            $inquiry_flg = true;

            $from_sql  = " (SELECT";
            $from_sql .= "      t_stock.ware_id,";
            $from_sql .= "      t_stock.goods_id,";
            $from_sql .= "      t_stock.stock_num + COALESCE(t_stock1_io.stock1_io_data, 0)";
            $from_sql .= "                        - COALESCE(t_stock2_io.stock2_io_data, 0)";
            $from_sql .= "      AS stock_total"; 
            $from_sql .= "  FROM";
            $from_sql .= "      t_stock";
            $from_sql .= "          LEFT JOIN\n";
            //在庫数
            $from_sql .= "      (SELECT\n";
            $from_sql .= "          ware_id,\n";
            $from_sql .= "          goods_id,\n";
            $from_sql .= "          SUM(num * CASE io_div\n";
            $from_sql .= "              WHEN 1 THEN 1\n";
            $from_sql .= "              WHEN 2 THEN -1\n";
            $from_sql .= "          END)AS stock1_io_data\n";
            $from_sql .= "       FROM\n";
            $from_sql .= "          t_stock_hand\n";
            $from_sql .= "       WHERE\n";
            $from_sql .= "          work_div = 3";
            $from_sql .= "          AND";
            $from_sql .= ($group_kind == '2')? " shop_id IN (".Rank_Sql().")\n" : " shop_id = $shop_id\n";
            $from_sql .= "          AND\n";
            $from_sql .= "          work_day <= '$inquiry_day'\n";
            $from_sql .= "          GROUP BY ware_id, goods_id\n";
            $from_sql .= "      ) AS t_stock1_io\n";
            $from_sql .= "      ON t_stock.goods_id = t_stock1_io.goods_id\n";
            $from_sql .= "      AND\n";
            $from_sql .= "      t_stock.ware_id = t_stock1_io.ware_id\n";
            $from_sql .= "          LEFT JOIN";
            //引当数
            $from_sql .= "      (SELECT";
            $from_sql .= "          ware_id,";
            $from_sql .= "          goods_id,";
            $from_sql .= "          SUM(num * CASE io_div";
            $from_sql .= "              WHEN 1 THEN -1";
            $from_sql .= "              WHEN 2 THEN 1";
            $from_sql .= "          END) AS stock2_io_data";
            $from_sql .= "      FROM";
            $from_sql .= "          t_stock_hand";
            $from_sql .= "      WHERE";
            $from_sql .= "          work_div = 1";
            $from_sql .= "          AND";
            $from_sql .= ($group_kind == '2')? " shop_id IN (".Rank_Sql().")\n" : " shop_id = $shop_id\n";
            $from_sql .= "          AND";
            $from_sql .= "          work_day < '$inquiry_day'";
            $from_sql .= "      GROUP BY ware_id, goods_id";
            $from_sql .= "      )AS t_stock2_io";
            $from_sql .= "      ON t_stock.goods_id = t_stock2_io.goods_id";
            $from_sql .= "      AND";
            $from_sql .= "      t_stock.ware_id = t_stock2_io.ware_id";
            $from_sql .= "  WHERE\n";
            $from_sql .= ($group_kind == '2')? " shop_id IN (".Rank_Sql().")\n" : " shop_id = $shop_id\n";
            $from_sql .= " ) AS t_stock_total \n";

        //照会日に過去の日付が指定された場合
        }elseif($inquiry_day != "--" && date("Y-m-d") > $inquiry_day){

            $inquiry_flg = true;

            $from_sql  = "(SELECT\n";
            $from_sql .= "      t_stock.ware_id,\n";
            $from_sql .= "      t_stock.goods_id,\n";
            $from_sql .= "      t_stock.stock_num - COALESCE(t_stock1_io.stock1_io_data,0)\n";
            $from_sql .= "      AS stock_total\n";
            $from_sql .= " FROM\n";
            $from_sql .= "      t_stock\n";
            $from_sql .= "          LEFT JOIN\n";
            $from_sql .= "      (SELECT\n";
            $from_sql .= "          ware_id,\n";
            $from_sql .= "          goods_id,\n";
            $from_sql .= "          SUM(num * CASE io_div\n";
            $from_sql .= "              WHEN 1 THEN 1\n";
            $from_sql .= "              WHEN 2 THEN -1\n";
            $from_sql .= "          END)AS stock1_io_data\n";
            $from_sql .= "      FROM\n";
            $from_sql .= "          t_stock_hand\n";
            $from_sql .= "      WHERE\n";
            $from_sql .= "          work_div <> 1\n";
            $from_sql .= "          AND\n";
            $from_sql .= "          work_div <> 3\n";
            $from_sql .= "          AND\n";
            $from_sql .= ($group_kind == '2')? " shop_id IN (".Rank_Sql().")\n" : " shop_id = $shop_id\n";
            $from_sql .= "          AND\n";
            $from_sql .= "          '$inquiry_day' < work_day\n";
            $from_sql .= "          AND\n";
            $from_sql .= "          work_day <= '".date("Y-m-d")."'\n";
            $from_sql .= "          GROUP BY ware_id, goods_id\n";
            $from_sql .= "      )AS t_stock1_io\n";
            $from_sql .= "      ON t_stock.goods_id = t_stock1_io.goods_id\n";
            $from_sql .= "      AND\n";
            $from_sql .= "      t_stock.ware_id = t_stock1_io.ware_id\n";
            $from_sql .= " ) AS t_stock_total\n";

        }

        /****************************/
        //WHERE_SQL 作成
        /****************************/
        //商品コードが指定された場合
        if($goods_cd != null){
            $goods_cd_sql = " AND t_goods.goods_cd LIKE '$goods_cd%'";
        }

        //商品名が指定された場合
        if($goods_cname != null){
            $goods_cname_sql = " AND t_goods.goods_cname LIKE '%$goods_cname%'";
        }

        //商品名が指定された場合
        if($goods_name != null){
            $goods_name_sql = " AND t_goods.goods_name LIKE '%$goods_name%'";
        }

        //Ｍ区分が指定された場合
        if($g_goods_id != null){
            $g_goods_sql = " AND t_goods.g_goods_id = $g_goods_id";
        }

        //製品区分が指定された場合
        if($product_id != null){
            $product_sql = " AND t_goods.product_id = $product_id";
        }

        //   が指定された場合
        if($g_product_id != null){
            $g_product_sql = " AND t_goods.g_product_id = $g_product_id";
        }

        //対象商品に本部商品が選択された場合
        if($target_goods == "1"){
            $target_goods_sql = " AND t_goods.public_flg = 't'";

        //対象商品に自社商品がしていされた場合
        }elseif($target_goods == "2"){
            $target_goods_sql  = " AND t_goods.shop_id = $_SESSION[client_id]";
            $target_goods_sql .= " AND t_goods.public_flg = 'f'";
        }
                
        //在庫区分の「マイナス在庫」が指定された場合
        if($stock_div == '2'){
             $stock_div_sql = " AND stock_total < 0";

        //在庫区分の「在庫あり」が指定された場合
        }elseif($stock_div == '0'){
            $stock_div_sql = " AND stock_total > 0";

        //在庫区分の「在庫０」が指定された場合
        }elseif($stock_div == '1'){
            $stock_div_sql = " AND stock_total = 0";
        }

        if ($attri_div != null){
            $attri_div_sql = " AND attri_div = '$attri_div' ";
        }

        //倉庫が指定された場合
        if($ware_id != null){
            $ware_sql = " AND t_stock_total.ware_id = $ware_id";
        }

        $where_sql  = $goods_cd_sql;
        $where_sql .= $goods_cname_sql;
        $where_sql .= $goods_name_sql;
        $where_sql .= $g_goods_sql;
        $where_sql .= $product_sql;
        $where_sql .= $g_product_sql;
        $where_sql .= $stock_div_sql;
        $where_sql .= $attri_div_sql;
        $where_sql .= $ware_sql;
        $where_sql .= $goods_gr_sql;
        $where_sql .= $target_goods_sql;

    }

    /****************************/
    //SQL作成
    /****************************/
    $sql  = "SELECT";
    $sql .= "   '',";
    $sql .= "   t_product.product_name,";
    $sql .= "   t_g_goods.g_goods_name,";
    $sql .= "   t_goods.goods_cd,";
    $sql .= "   t_goods.goods_name,";
    $sql .= "   t_goods.goods_cname,";
    $sql .= "   t_ware.ware_name,";
    $sql .= "   stock_total,";
    $sql .= "   t_price.r_price,";
    $sql .= "   stock_total * t_price.r_price AS stock_price,";
    $sql .= "   t_work_day.last_work_day,";
    $sql .= "   t_stock_total.ware_id,";
    $sql .= "   t_stock_total.goods_id,";
    $sql .= "   t_g_product.g_product_name";
    $sql .= " FROM";
    if($inquiry_flg == true){
        $sql .= $from_sql;
    }else{
        $sql .= "(SELECT";
        $sql .= "   t_stock.ware_id,";
        $sql .= "   t_stock.goods_id,";
        $sql .= "   t_stock.stock_num AS stock_total";
        $sql .= " FROM";
        $sql .= "   t_stock";
        $sql .= " WHERE";
        $sql .= ($group_kind == '2')? " shop_id IN (".Rank_Sql().")\n" : " shop_id = $shop_id\n";
        $sql .= " ) AS t_stock_total";
    }
    $sql .= "       LEFT JOIN";
    $sql .= "   (SELECT";
    $sql .= "       ware_id,";
    $sql .= "       goods_id,";
    $sql .= "       MAX(work_day) AS last_work_day";
    $sql .= "   FROM";
    $sql .= "       t_stock_hand";
    $sql .= "   WHERE";
    //事業所が指定されている場合
    if($cshop != NULL){
        $sql .= "    shop_id = $cshop ";
    }else{
        $sql .= "    shop_id = $shop_id";
    }
    $sql .= "       AND";
    $sql .= "       work_day <= '".date("Y-m-d")."'";
    $sql .= "       AND";
    $sql .= "       (work_div = 2";
    $sql .= "       OR";
    $sql .= "       work_div = 4)";
    $sql .= "   GROUP BY ware_id,goods_id";
    $sql .= "   )AS t_work_day";
    $sql .= "       ON t_stock_total.ware_id = t_work_day.ware_id";
    $sql .= "       AND";
    $sql .= "       t_stock_total.goods_id = t_work_day.goods_id";
    $sql .= "       INNER JOIN t_goods"; 
    $sql .= "       ON t_stock_total.goods_id = t_goods.goods_id";
    $sql .= "       INNER JOIN t_g_goods";
    $sql .= "       ON t_goods.g_goods_id = t_g_goods.g_goods_id";
    $sql .= "       INNER JOIN t_product";
    $sql .= "       ON t_goods.product_id = t_product.product_id";
    $sql .= "       INNER JOIN t_g_product";
    $sql .= "       ON t_goods.g_product_id = t_g_product.g_product_id";
    $sql .= "       INNER JOIN t_ware";
    $sql .= "       ON t_stock_total.ware_id = t_ware.ware_id";
    $sql .= "       INNER JOIN t_price";
    $sql .= "       ON t_stock_total.goods_id = t_price.goods_id";
    $sql .= " WHERE";
    $sql .= "   t_goods.stock_manage = '1'";
    $sql .= "   AND";
    $sql .= ($group_kind == '2')? " t_price.shop_id IN (".Rank_Sql().") \n" :  " t_price.shop_id = $shop_id\n";
    $sql .= "   AND";
    $sql .= "   t_price.rank_cd = 3";
    $sql .= "   AND";
    if($cshop != NULL){
        $sql .= "   t_ware.own_shop_id = $cshop ";
    }else{
        $sql .=  ($group_kind == '2')? " t_ware.shop_id IN (".Rank_Sql().")\n" : " t_ware.shop_id = $shop_id\n";
    }
    $sql .= $where_sql;
    $sql .= " ORDER BY t_g_goods.g_goods_cd,t_product.product_cd, t_g_product.g_product_id, t_goods.goods_cd, t_goods.attri_div, t_ware.ware_cd\n";
    $sql .= ";";
    $result = Db_Query($conn, $sql);
    $match_count = pg_num_rows($result);
    for($i = 0; $i < $match_count; $i++){
        $page_data[] = pg_fetch_array($result, $i, PGSQL_NUM);

        //ナンバーフォーマット
        //マイナスの場合は赤字にセット
        //金額合計と数量の合計を求める
        $num_total   = bcadd($num_total, $page_data[$i][7]);
        $money_total = bcadd($money_total, $page_data[$i][9]);

        if($page_data[$i][7] < 0){
            $page_data[$i][7] = number_format($page_data[$i][7]);
            $page_data[$i][7] = "<font color=\"red\">".$page_data[$i][7]."</font>";
        }else{
            $page_data[$i][7] = number_format($page_data[$i][7]);
        }
        $page_data[$i][8] = number_format($page_data[$i][8]);
        if($page_data[$i][9] < 0){
            $page_data[$i][9] = number_format($page_data[$i][9]);
            $page_data[$i][9] = "<font color=\"red\">".$page_data[$i][9]."</font>";
        }else{
            $page_data[$i][9] = number_format($page_data[$i][9]);
        }

        //サニタイズ
        $page_data[$i][1] = htmlspecialchars($page_data[$i][1]);
        $page_data[$i][2] = htmlspecialchars($page_data[$i][2]);
        $page_data[$i][4] = htmlspecialchars($page_data[$i][4]);
        $page_data[$i][5] = htmlspecialchars($page_data[$i][5]);
        $page_data[$i][6] = htmlspecialchars($page_data[$i][6]);

    }

    if($num_total < 0){
        $num_total = number_format($num_total);
        $num_total = "<font color=\"red\">".$num_total."</font>";
    }else{
        $num_total = number_format($num_total);
    }

    if($money_total < 0){ 
        $money_total = number_format($money_total);
        $money_total = "<font color=\"red\">".$money_total."</font>";
    }else{
        $money_total = number_format($money_total);
    }

    /****************************/
    //チェックボックス作成
    /****************************/
    //発注入力チェック
    $form->addElement(
        "checkbox", "form_order_all_check", '', '発注入力',"
        onClick=\"javascript:All_check('form_order_all_check','form_order_check',$match_count)\""
    );

    for($i = 0; $i < $match_count; $i++){
        $form->addElement("checkbox", "form_order_check[$i]","","","","");
        $clear_data["form_order_check"][$i] = "";
    }

    $clear_data["form_order_all_check"] = "";

    $form->setConstants($clear_data);

}

/****************************/
//発注ボタン押下処理
/****************************/
if($_POST["form_order_button"] == "発注入力へ"){

    $target_goods = $_POST["form_target_goods"];


    if(count($_POST["form_order_check"]) == 0){
        $form->setElementError("form_order_all_check","発注する商品を選択してください。");
    }
    if($target_goods == '3' && count($_POST["form_order_check"]) != 0){
        $form->setElementError("form_order_all_check","対象商品は「本部商品」または「その他商品」を選択して下さい。");
    }

    if($form->validate()){
        /****************************/
        //発注商品IDを取得
        /****************************/
        for($i = 0; $i < $match_count; $i++){
            if($_POST["form_order_check"][$i] == 1){
                $order_goods_id[] = $page_data[$i][12];
            }
        }
        //重複を纏める
        asort($order_goods_id);
        $order_goods_id = array_values(array_unique($order_goods_id));

        /****************************/
        //GETする値を生成
        /****************************/
        $r = 0;
        for($i = 0; $i < count($order_goods_id); $i++){
            $get_goods_id .= "order_goods_id[".$r."]=".$order_goods_id[$i];
            if($i != count($order_goods_id)-1){
                $get_goods_id .= "&";
                $r = $r+1;
            }else{
                break;
            }
        }

        $get_goods_id = $get_goods_id."&target_goods=".$_POST["form_target_goods"];
        header("Location: ".FC_DIR."buy/2-3-102.php?$get_goods_id");
    }
}

/****************************/
//HTMLヘッダ
/****************************/
$html_header = Html_Header($page_title);

/****************************/
//HTMLフッタ
/****************************/
$html_footer = Html_Footer();

/****************************/
//メニュー作成
/****************************/
$page_menu = Create_Menu_f('stock','1');

/****************************/
//画面ヘッダー作成
/****************************/
$page_header = Create_Header($page_title);

/****************************/
//ページ作成
/****************************/
// Render関連の設定
$renderer =& new HTML_QuickForm_Renderer_ArraySmarty($smarty);
$form->accept($renderer);

//form関連の変数をassign
$smarty->assign('form',$renderer->toArray());

//その他の変数をassign
$smarty->assign('var',array(
	'html_header'   => "$html_header",
	'page_menu'     => "$page_menu",
	'page_header'   => "$page_header",
	'html_footer'   => "$html_footer",
	'html_page'     => "$html_page",
	'html_page2'    => "$html_page2",
	'cshop_name'    => "$cshop_name",
	'day'           => "$day",
    'num_total'     => "$num_total",
    'money_total'   => "$money_total"
));

$smarty->assign("page_data",$page_data);

//テンプレートへ値を渡す
$smarty->display(basename($_SERVER[PHP_SELF] .".tpl"));

?>
